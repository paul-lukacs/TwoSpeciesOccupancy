summary(mod3)
res <- residuals(mod3) # extrair os residuos do modelo
hist(res, bty='n', col="grey", breaks=20, main="") # verificar se os residuos seguem distribuicao normal
shapiro.test(res) # apesar de o histograma parecer apresentar uma distribuicao normal, o teste de shapiro é significativo, o que indica que a distribuicao dos residuos pode nao ser normal. Neste caso, vamos tentar ajustar o modelo com uma distribuicao de erros gamma (é algo entre o gaussian e o poisson), para verificar se tem melhor ajuste
mod3G <- glmer(IndiceAves ~ aSupVegSec.z+aSupPast.z + (1|Campanha.letra) + (1|Modulo), data=aves, family = Gamma) # efeitos aleatorios do ano e do modulo
mod3G <- glmer(IndiceAves ~ dMin.Z + (1|Campanha.letra) + (1|Modulo), data=aves, family = Gamma) # efeitos aleatorios do ano e do modulo
# Comparar os modelos
model.sel(mod3,mod3G) # o modelo que assume a distribuicao de erros normal (mod3) tem melhor ajuste que o modelo Gamma.
plot(mod3) # fazer o plot dos valores previstos contra os residuos. De facto, apesar haver tres valores que sao muito inferiores ao resto, o residuos parecem distribuir-se de forma mais ou menos homogenea em volta do zero, o que revela que nao há desvios importantes no ajuste do modelo.
Anova(mod3) # Verificar se as variaveis de efeitos fixos do modelo tem um relacao significativa com o indice de biodiversidade. Apesar de estarem no melhor modelo, o seu efeito nao é significativo, o que indica que apesar de contribuirem para um melhor ajuste dos dados, provavelmente têm muita variabilidade associada.
summary(aves$dMin.Z)
dMin <- seq(min(aves$dMin.Z),max(aves$dMin.Z),10)
dMin
dMin <- seq(min(aves$dMin.Z),max(aves$dMin.Z),10)
dMin
seq(0,1,10)
seq(0,1,100)
seq(1,2,10)
dMin <- seq(min(aves$dMin.Z),max(aves$dMin.Z),by = 0.1)
dMin
dMin <- seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100)
dMin
pred <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
dMin <- data.frame(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100))
pred <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
colnames(dMin) <- dMin.Z
colnames(dMin) <- "dMin.Z"
pred <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
View(pred)
pred$inf <- pred$fit-1.96*pred$se.fit
pred$sup <- pred$fit+1.96*pred$se.fit
pred <- rbind(dMin,pred)
pred <- cbind(dMin,pred)
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n") # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(0,5)) # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(2,5)) # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,5)) # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4)) # add graph for best fit
min(aves$dMin.Z)
max(aves$dMin.Z)
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,6)) # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,5.5)) # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade prevista de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,5)) # add graph for best fit
plot(pred$dMin.Z,pred$fit, las=1, xlab="Distancia",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,5)) # add graph for best fit
polygon(c(pred$dMin.Z,rev(pred$dMin.Z)),c(pred$inf,rev(pred$sup)),border=NA,col=rgb(0,0,255, 0.2*255, maxColorValue = 255)) # add confidence interval
pred <- data.frame(predict(d2, type="link", newdata=dMin, re.form=NA, se.fit=T))
x <- predict(d2, newdata = dMin, se.fit = T)
x <- MuMIn::predict(d2, newdata = dMin, se.fit = T)
x <- MuMIn::predict(d2, newdata = dMin, se.fit = T, full = FALSE)
x <- predict(d2, newdata = dMin, se.fit = T, full = FALSE)
x <- MuMIn::predict(d2, newdata = dMin, se.fit = T, full = FALSE)
summary(d2)
x <- dMin
x$pred <- 3.57158+x$dMin.Z*-0.06528
x$inf <- 3.57158+x$dMin.Z*(-0.06528-(1.96*0.02512))
x$inf <- 3.57158+x$dMin.Z*(-0.06528-(1.96*0.02512))
x$sup <- 3.57158+x$dMin.Z*(-0.06528+(1.96*0.02512))
plot(x$dMin.Z,x$pred, las=1, xlab="Distancia",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,5)) # add graph for best fit
polygon(c(x$dMin.Z,rev(x$dMin.Z)),c(x$inf,rev(x$sup)),border=NA,col=rgb(0,0,255, 0.2*255, maxColorValue = 255)) # add confidence interval
x$inf <- 3.57158+x$dMin.Z*((1.96*(-0.06528-0.02512))
x$inf <- 3.57158+x$dMin.Z*((1.96*(-0.06528-0.02512)
x$inf <- 3.57158+x$dMin.Z*((1.96*(-0.06528-0.02512))
x$inf <- 3.57158+x$dMin.Z*(1.96*(-0.06528-0.02512))
d2<-get.models(dd,subset = delta < 2)
avgm <- model.avg(confset.95p)
avgm <- model.avg(d2)
summary(avgm)  # obter resultado do model average para as variaveis dentro do delta AICc <2
confint(avgm) # obter intervalo de confianca das estimativas
newdata <- as.data.frame(lapply(lapply(Cement[, -1], mean), rep, 25))
head(newdata)
pred <- data.frame(
model = sapply(d2, predict, newdata = dMin),
averaged.subset = predict(avgm, dMin, full = FALSE),
averaged.full = predict(avgm, dMin, full = TRUE)
)
pred.se <- predict(avgm, dMin, se.fit = TRUE)
summary(mod3)
View(pred)
3.60755+(-0.705329)*(-0.06528-0.02505*1.96)
3.60755+(-0.705329)*(1.96*(-0.06528-0.02505)
)
pred <- data.frame(
model = sapply(d2, predict, newdata = dMin),
averaged.subset = predict(avgm, dMin, full = FALSE),
averaged.full = predict(avgm, dMin, full = TRUE)
)
levels(aves$Campanha.letra)
dMin <- data.frame(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100)),7)
rep(2,3)
dMin <- data.frame(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7)
dMin <- data.frame(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100)),7)
dMin <- rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7)
dMin <- data.frame(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7))
rep("a",100)
Campanha <- c(rep("a",100),rep("b",100),rep("c",100),rep("d",100),rep("d",100),rep("f",100),rep("g",100))
newdata <- data.frame(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7))
pred <- data.frame(
model = sapply(d2, predict, newdata = dMin),
averaged.subset = predict(avgm, dMin, full = FALSE),
averaged.full = predict(avgm, dMin, full = TRUE)
)
newdata$Campanha.letra <- c(rep("a",100),rep("b",100),rep("c",100),rep("d",100),rep("d",100),rep("f",100),rep("g",100))
levels(aves$Modulo)
newdata <- data.frame(rep(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7),11)
newdata <- data.frame(rep(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7),11)
newdata <- data.frame(rep(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7),11))
colnames(dMin) <- "dMin.Z"
newdata$Campanha.letra <- rep(c(rep("a",100),rep("b",100),rep("c",100),rep("d",100),rep("d",100),rep("f",100),rep("g",100)),11)
View(newdata)
newdata <- data.frame(rep(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7),11))
colnames(dMin) <- "dMin.Z"
newdata$Campanha.letra <- rep(c(rep("a",100),rep("b",100),rep("c",100),rep("d",100),rep("d",100),rep("f",100),rep("g",100)),11)
newdata <- data.frame(rep(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7),11))
colnames(newdata) <- "dMin.Z"
newdata$Campanha.letra <- rep(c(rep("a",100),rep("b",100),rep("c",100),rep("d",100),rep("d",100),rep("f",100),rep("g",100)),11)
newdata$Modulo <- rep(c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700)),7)
c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700))
x <- rep(c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700)),7)
View(newdata)
x <- c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700)))
x <- c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700))
newdata$Modulo <- c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700))
View(newdata)
pred <- data.frame(
model = sapply(d2, predict, newdata = newdata),
averaged.subset = predict(avgm, newdata, full = FALSE),
averaged.full = predict(avgm, newdata, full = TRUE)
)
pred <- data.frame(
model = sapply(d2, predict, newdata = newdata),
averaged.subset = predict(avgm, newdata, full = FALSE, se.fit = T),
averaged.full = predict(avgm, newdata, full = TRUE)
)
dMin <- seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100)
#Calcular os valores previstos de acordo com o melhor modelo (mod3)
dMin <- seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100)
colnames(dMin) <- "dMin.Z"
pred.mod3 <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
#Calcular os valores previstos de acordo com o melhor modelo (mod3)
dMin <- data.frame(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100))
colnames(dMin) <- "dMin.Z"
pred.mod3 <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
pred$inf <- pred$fit-1.96*pred$se.fit
pred$sup <- pred$fit+1.96*pred$se.fit
pred.mod3 <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
pred.mod3$inf <- pred.mod3$fit-1.96*pred$se.fit
pred.mod3$inf <- pred.mod3$fit-1.96*pred.mod3$se.fit
pred.mod3$sup <- pred.mod3$fit+1.96*pred.mod3$se.fit
pred.mod3 <- cbind(dMin,pred.mod3)
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(x$dMin.Z,x$pred, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-0.5,5))
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$pred, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-0.5,5))
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-0.5,5))
polygon(c(pred.mod3$dMin.Z,rev(pred.mod3$dMin.Z)),c(pred.mod3$inf,rev(pred.mod3$sup)),border=NA,col=rgb(0,0,255, 0.2*255, maxColorValue = 255)) # adicionar o intervalo de confiança
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,5))
polygon(c(pred.mod3$dMin.Z,rev(pred.mod3$dMin.Z)),c(pred.mod3$inf,rev(pred.mod3$sup)),border=NA,col=rgb(0,0,255, 0.2*255, maxColorValue = 255)) # adicionar o intervalo de confiança
#Calcular os valores previstos de acordo com o melhor modelo (mod3)
dMin <- data.frame(seq(-1,6,length.out = 100))
colnames(dMin) <- "dMin.Z"
pred.mod3 <- data.frame(predict(mod3, type="link", newdata=dMin, re.form=NA, se.fit=T))
pred.mod3$inf <- pred.mod3$fit-1.96*pred.mod3$se.fit
pred.mod3$sup <- pred.mod3$fit+1.96*pred.mod3$se.fit
pred.mod3 <- cbind(dMin,pred.mod3)
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,5))
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,6))
polygon(c(pred.mod3$dMin.Z,rev(pred.mod3$dMin.Z)),c(pred.mod3$inf,rev(pred.mod3$sup)),border=NA,col=rgb(0,0,255, 0.2*255, maxColorValue = 255)) # adicionar o intervalo de confiança
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(2.5,4), xlim = c(-1,6))
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3.5,4), xlim = c(-1,6))
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(3,4), xlim = c(-1,6))
# Fazer grafico da biodiversidade de aves prevista, em funcao do melhor modelo (mod3)
plot(pred.mod3$dMin.Z,pred.mod3$fit, las=1, xlab="Distância",ylab="Diversidade de Aves",type="l",lwd=2,col="blue", cex=0.8, bty="n", ylim = c(2.5,4), xlim = c(-1,6))
polygon(c(pred.mod3$dMin.Z,rev(pred.mod3$dMin.Z)),c(pred.mod3$inf,rev(pred.mod3$sup)),border=NA,col=rgb(0,0,255, 0.2*255, maxColorValue = 255)) # adicionar o intervalo de confiança
#Calcular os valores previstos de acordo com o model average (nao permite estimar os intervalos de confianca devido aos factore aleatorios)
newdata <- data.frame(rep(rep(seq(min(aves$dMin.Z),max(aves$dMin.Z),length.out = 100),7),11))
colnames(newdata) <- "dMin.Z"
newdata$Campanha.letra <- rep(c(rep("a",100),rep("b",100),rep("c",100),rep("d",100),rep("d",100),rep("f",100),rep("g",100)),11)
newdata$Modulo <- c(rep(1,700),rep(2,700),rep(3,700),rep(4,700),rep(5,700),rep(6,700),rep(7,700),rep(8,700),rep("a1",700),rep("a2",700),rep("a3",700))
pred.avg <- data.frame(
model = sapply(d2, predict, newdata = newdata),
averaged.subset = predict(avgm, newdata, full = FALSE, se.fit = T),
averaged.full = predict(avgm, newdata, full = TRUE)
)
pred.avg <- data.frame(
model = sapply(d2, predict, newdata = newdata),
averaged.subset = predict(avgm, newdata, full = FALSE),
averaged.full = predict(avgm, newdata, full = TRUE)
)
pred.avg <- data.frame(
model = sapply(d2, predict, newdata = newdata),
averaged.subset = predict(avgm, newdata, full = FALSE))
summary(all)
estimates(all)
estimate(all)
pi()
pi
pi*(0.32)^2
sqrt(1/pi)
pi*(0.56)^2
2*pi*0.5641896
exp(1.44)/(1+exp(1.44))
exp(-5.23)/(1+exp(-5.23))
load("/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/3.analyses/1.rcode/occ/single.species/redfox/redfox.occ.RData")
fox.nb
library(mcmcplots)
library(R2jags)
library(R2jags)
fox.nb
mcmcplot(fox.nb)
eff.nb
load("/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/3.analyses/1.rcode/occ/two.species/multispsFOX.occ.RData")
p <- ggplot(phis, aes(x=names, y=mean)) +
geom_point()+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.1,
position=position_dodge(0.05)) +
theme_minimal() +
geom_hline(yintercept = 1, linetype = "dashed", colour = "grey")  +
xlab("Species pair") +
ylab("Species Interaction Factor") +
scale_y_continuous(limits = c(0,2))
library(easyGgplot2)
p <- ggplot(phis, aes(x=names, y=mean)) +
geom_point()+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.1,
position=position_dodge(0.05)) +
theme_minimal() +
geom_hline(yintercept = 1, linetype = "dashed", colour = "grey")  +
xlab("Species pair") +
ylab("Species Interaction Factor") +
scale_y_continuous(limits = c(0,2))
#ggtitle("") +
#theme(plot.title = element_text(hjust = 0.5))
#scale_y_continuous(limits = c(0,10))
print(p)
load("/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/3.analyses/1.rcode/occ/two.species/FOX.multisps1.RData")
m <- data.frame(multisps1$BUGSoutput$summary)
phis <- m[c("phi1","phi2","phi3","phi4","phi5"),]
phis$names <- c("fox/wildcat","fox/pmarten","fox/smarten","fox/mongoose","fox/genet")
x <- data.frame(multisps1$BUGSoutput$sims.matrix)
phis$mode <- c(Mode(x$phi1),Mode(x$phi2),Mode(x$phi3),Mode(x$phi4),Mode(x$phi5))
#generate data frame with estimates for each phi
x <- x[,c("phi1","phi2","phi3","phi4","phi5")]
x <- round(x,2)
x1 <- data.frame(c(x$phi1,x$phi2,x$phi3,x$phi4,x$phi5))
colnames(x1) <- "phi"
x1$names <- c(rep("fox-wildcat",nrow(x)),
rep("fox-pmarten",nrow(x)),
rep("fox-smarten",nrow(x)),
rep("fox-mongoose",nrow(x)),
rep("fox-genet",nrow(x)))
q <- ggplot(x1, aes(x=phi, fill=names)) +
geom_density(alpha=0.4) +
scale_fill_brewer(palette = "Paired") +
theme_minimal() +
scale_x_continuous(limits = c(-1, 4)) +
geom_vline(xintercept = 1, linetype = "dashed", colour = "black") +
ggtitle("Species Interaction Factor") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_wrap(~ names, nrow = 3, ncol = 3) +
theme(legend.position="none")
print(q)
library(igraph)
str(make_ring(10))
str(make_ring(10, directed = TRUE, mutual = TRUE))
print_all(make_ring(10))
print_all(make_ring(10, directed = TRUE, mutual = TRUE))
2==2
2!=2
is.na(5+NA)
is.null(NULL)
10 + NULL
v1 <- c(1, 5, 11, 33)       # Numeric vector, length 4
v2 <- c("hello","world")    # Character vector, length 2 (a vector of strings)
v3 <- c(TRUE, TRUE, FALSE)  # Logical vector, same as c(T, T, F)
v4 <- c(v1,v2,v3,"boo")
v4
v1 <- 1:5
length(v1)
v1 + 1
m <- matrix(1,5,4)
dim(m)
m>3
t(m)
m <- matrix(rep(seq(1:5),4),5,4)
m
m <- matrix(rep(seq(1:5),4),5,4, byrow = T)
m
m <- matrix(rep(seq(1:5),4),5,4)
t(m)
m %*% t(m)
m
m * m
m %*% m
a <- array(data=1:18,dim=c(3,3,2))
a
dfr1 <- data.frame( ID=1:4,
FirstName=c("John","Jim","Jane","Jill"),
Female=c(F,F,T,T),
Age=c(22,33,44,55) )
dfr1
dfr1$FirstName
dfr1[dfr1$Age>30,2]
plot(x=1:10, y=rep(5,10), pch=19, cex=3, col="dark red")
colors()
palf <- colorRampPalette(c("yellow", "red"))
plot(x=10:1, y=1:10, pch=19, cex=5, col=palf(10))
palf <- colorRampPalette(c("yellow", "green"))
plot(x=10:1, y=1:10, pch=19, cex=5, col=palf(10))
rm(list = ls()) # Remove all the objects we created so far.
library(igraph)
g1 <- graph( edges=c(1,2, 2,3, 3, 1), n=3, directed=F )
View(g1)
plot(g1) # A simple plot of the network - we'll talk more about plots later
g1 <- graph( edges=c('lynx','fox', 'fox','wildcat', 'wildcat', 'lynx'), n=3, directed=F )
plot(g1) # A simple plot of the network - we'll talk more about plots later
class(g1)
g1
g2 <- graph( edges=c(1,2, 2,3, 3, 1), n=10 )
plot(g2)
g1 <- graph( edges=c('lynx','fox', 'fox','wildcat', 'wildcat', 'lynx'), n=3, directed=T )
plot(g1) # A simple plot of the network - we'll talk more about plots later
g1 <- graph( edges=c('lynx','fox', 'fox','wildcat', 'lynx','wildcat'), n=3, directed=T )
plot(g1) # A simple plot of the network - we'll talk more about plots later
g1 <- graph( edges=c('lynx','fox',
'fox','wildcat',
'lynx','wildcat'
'lynx','badger',
'badger','fox'), n=4, directed=T )
plot(g1) # A simple plot of the network - we'll talk more about plots later
g1 <- graph( edges=c('lynx','fox',
'fox','wildcat',
'lynx','wildcat',
'lynx','badger',
'badger','fox'), n=4, directed=T )
plot(g1) # A simple plot of the network - we'll talk more about plots later
citation(package = "base", lib.loc = NULL, auto = NULL)
citation(package = "base", lib.loc = NULL, auto = NULL)
(14*12)+(15*12)+(9*12)+3*(15*9)
((14*12)+(15*12)+(9*12)+3*(15*9))/14+15+9+3*15
((14*12)+(15*12)+(9*12)+3*(15*9))/(14+15+9+3*15)
mean(rep(12,14))
mean(rep(12,14))
rep(12,14)
rep(12,9)
mean(rep(12,14),rep(12,15),rep(12,9),rep(9,27))
mean(c(rep(12,14),rep(12,15),rep(12,9),rep(9,27)))
mean(c(rep(12,14),rep(12,15),rep(12,9),rep(9,27)))
length(c(rep(12,14),rep(12,15),rep(12,9),rep(9,27)))
sd(c(rep(12,14),rep(12,15),rep(12,9),rep(9,27)))/sqrt(65)
sIP1000m <- read.csv('/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/2.SIG/cameras/wgs84/MODISdata/SouthIP/temp/South_samplingpts_EVI-VCF_1000mbuff.csv', sep=',',header=T)
sIP1000m <- read.csv('/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/2.SIG/cameras/wgs84/MODISdata/SouthIP/temp/South_samplingpts_EVI-VCF_1000mbuff.csv', sep=',',header=T)
sIP1000m <- read.csv('/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/2.SIG/cameras/wgs84/MODISdata/SouthIP/temp/South_samplingpts_VCF-EVI_1000mbuffer.csv.csv', sep=',',header=T)
sIP1000m <- read.csv('/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/2.SIG/cameras/wgs84/MODISdata/SouthIP/temp/South_samplingpts_VCF-EVI_1000mbuffer.csv', sep=',',header=T)
attach(sIP1000m)
## VEGETATION COVER
TC <- aggregate(list(TC2009065,TC2010065,TC2011065,TC2012065,TC2013065,TC2014065,TC2015065),by=list(station=station),mean,na.rm=T) # mean tree cover
colnames(TC)[2:8] <- c('TC2009','TC2010','TC2011','TC2012','TC2013','TC2014','TC2015')
nTC <- aggregate(list(nTC2009065,nTC2010065,nTC2011065,nTC2012065,nTC2013065,nTC2014065,nTC2015065),by=list(station=station),mean,na.rm=T) # mean nontree vegetative cover
colnames(nTC)[2:8] <- c('nTC2009','nTC2010','nTC2011','nTC2012','nTC2013','nTC2014','nTC2015')
nV <- aggregate(list(nV2009065,nV2010065,nV2011065,nV2012065,nV2013065,nV2014065,nV2015065),by=list(station=station),mean,na.rm=T) #  # mean open areas cover
colnames(nV)[2:8] <- c('nV2009','nV2010','nV2011','nV2012','nV2013','nV2014','nV2015')
TCsd <- aggregate(list(TCsd200906,TCsd201006,TCsd201106,TCsd201206,TCsd201306,TCsd201406,TCsd201506),by=list(station=station),mean,na.rm=T) # mean tree cover
colnames(TCsd)[2:8] <- c('TCsd2009','TCsd2010','TCsd2011','TCsd2012','TCsd2013','TCsd2014','TCsd2015')
Vcover1000 <- cbind(TC,nTC[,c(2:8)],nV[,c(2:8)],TCsd[,c(2:8)])
rm(list=c('TC','nTC','nV','TCsd'))
View(Vcover1000)
##Enhanced Vegetation INdex (EVI)
EVI <- sIP1000m[,grepl("EVI",names(sIP1000m))] # get only the columns containing EVI
EVI <- EVI[ , order(names(EVI))] # order de columns chronologically
EVI <- cbind(sIP1000m$station,EVI)
colnames(EVI)[1] <- 'station'
EVIs <- aggregate(list(EVI[,c(2:86)]),by=list(station=station),sum,na.rm=T) #  # sum of the EVI for each camera
b1000 <- data.frame(EVIs$station)
View(EVI)
names(EVI[,c(2:86)])
pi()
pi
(500)^2
pi*(500)^2
pi*(0.5)^2
dat <- read.csv('/Volumes/NO NAME/Variables1.csv', sep=',', header = T)
View(dat)
names(dat)
dat <- read.csv('/Volumes/NO NAME/VariablesCorrelation/var_sp07_less.csv', sep=',', header = T)
dat <- read.csv('/Volumes/NO NAME/VariablesCorrelation/var_sp07_less.csv', sep=',', header = T)
dat <- read.csv('/Volumes/NO NAME/VariablesCorrelation/var_sp07_less.csv', sep=';', header = T)
names(dat)
z <- NULL
dat <- read.csv('/Volumes/NO NAME/VariablesCorrelation/var_sp07_less.csv', sep=';', header = T)
t <- (dat$Temp_min-mean(dat$Temp_min))/sd(dat$Temp_min)
hist(t, col='grey', bty='n')
t <- data.frame((dat$Temp_min-mean(dat$Temp_min))/sd(dat$Temp_min))
z <- data.frame((dat$Temp_min-mean(dat$Temp_min))/sd(dat$Temp_min))
mr(t)
rm(t)
colnames(z) <- 'z.temp'
z$z.asp <- (dat$Aspect-mean(dat$Aspect))/sd(dat$Aspect)
hist(z$z.asp, col='grey', bty='n')
z$z.crop <- (dat$crops_pastures-mean(dat$crops_pastures))/sd(dat$crops_pastures)
hist(z$z.crop, col='grey', bty='n')
hist(z$z.crop, col='grey', bty='n', breaks = 20)
hist(log(z$z.crop), col='grey', bty='n', breaks = 20)
hist((z$z.crop)^2, col='grey', bty='n', breaks = 20)
hist(dat$IQA_QUADRI.crop, col='grey', bty='n', breaks = 20)
hist(dat$IQA_QUADRI, col='grey', bty='n', breaks = 20)
hist(log(dat$IQA_QUADRI), col='grey', bty='n', breaks = 20)
library(spaa)
citation(package = "spaa")
load("/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/3.Radiotracking wildcat/ms/4.Ecology and Evolution/Review1/artigogatoupdate/2nd.order.data.RData")
par(mfrow=c(2,2))
par(mar=c(2.5,6.5,2,0))
plot(NULL, type="n", axes=F, ann=F, xlim=c(0,1), ylim=c(0,1))
## FEMEAS LANDSCAPE LEVEL | HABITAT
par(new=TRUE)
par(mar=c(2.5,6.5,2,0))
plot(yf$dflr,yf$dflr.fit, las=1, xlab="",ylab="",type="l",lwd=3,lty=2,col="darkgreen", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1),xaxt = "n")# add graph for best fit
axis(side = 1, at = yf$elev, labels = FALSE, tck = 0)
mtext("Females",side = 3, line = 0.5, at=1000, cex = 1.5)
mtext("Habitat",side = 2, line = 4.7, at=0.5, cex = 1.5)
mtext("Relative Probability",side = 2, line = 3.2, at=0.5, cex = 0.8)
mtext("of Presence",side = 2, line = 2.3, at=0.5, cex = 0.8)
#adicionar os valores previstos em funcao da area de agricultura
par(new=TRUE)
par(mar=c(2.5,6.5,2,0))
plot(yf$agr,yf$agr.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,col="goldenrod1", cex=0.8, bty="n", xlim=c(0,7),ylim=c(0,1))
#adicionar os valores previstos em funcao da distancia a matos
par(new=TRUE)
par(mar=c(2.5,6.5,2,0))
plot(yf$dscr,yf$dscr.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,lty=2,col="darkolivegreen3", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1))
#adicionar os valores previstos em funcao da distancia a agua
par(new=TRUE)
par(mar=c(2.5,6.5,2,0))
plot(yf$dwtr,yf$dwtr.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,lty=2,col="#1F78B4", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1))
##MACHOS LANDSCAPE LEVEL | HABITAT
par(mar=c(2.5,2.5,2,2),xpd=TRUE)
plot(ym$dflr,ym$dflr.fit, las=1, xlab="",ylab="",type="l",lwd=3,lty=2,col="darkgreen", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1),xaxt = "n")# add graph for best fit
axis(side = 1, at = ym$dflr, labels = FALSE, tck = 0)
mtext("Males",side = 3, line = 0.5, at=1000, cex = 1.5)
#adicionar os valores previstos em funcao da distancia a matos
par(new=TRUE)
par(mar=c(2.5,2.5,2,2))
plot(ym$dscr,ym$dscr.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,lty=2,col="darkolivegreen3", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1))
#adicionar os valores previstos em funcao da area de agricultura
par(new=TRUE)
par(mar=c(2.5,2.5,2,2))
plot(ym$agr,ym$agr.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,col="goldenrod1", cex=0.8, bty="n", xlim=c(0,7),ylim=c(0,1))
#adicionar os valores previstos em funcao da distancia a agua
par(new=TRUE)
par(mar=c(2.5,2.5,2,2))
plot(ym$dwtr,ym$dwtr.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,lty=2,col="#1F78B4", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1))
legend("topright",
legend=c("Forests","Scrublands","Agriculture","Water bodies"),
lty = c(1,1,1,1),lwd = c(2,2,2,2,2),
col = c("darkgreen","darkolivegreen3","goldenrod1","#1F78B4"),
bty = "n",ncol = 1,
cex = 0.8)
## FEMEAS LANDSCAPE LEVEL | PERTURBACAO
par(mar=c(5,6.5,0,0))
plot(yf$elev,yf$elev.fit, las=1, xlab="",ylab="",type="l",lwd=3,col="black", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1),xaxt = "n")# add graph for best fit
axis(side = 1, at = yf$elev, labels = FALSE, tck = 0)
mtext("Disturbance",side = 2, line = 4.7, at=0.5, cex = 1.5)
mtext("Relative Probability",side = 2, line = 3.2, at=0.5, cex = 0.8)
mtext("of Presence",side = 2, line = 2.3, at=0.5, cex = 0.8)
mtext("Min",side = 1, line = 0.5, at=0, cex = 1)
mtext("Max",side = 1, line = 0.5, at=2000, cex = 1)
#adicionar os valores previstos em funcao do slope
par(new=TRUE)
par(mar=c(5,6.5,0,0))
plot(yf$slp,yf$slp.fit, las=1, axes=FALSE, xlab="", ylab="", type="l",lwd=3,col="tomato4", cex=0.8, bty="n", xlim=c(0,60),ylim=c(0,1)) # add graph for best fit
#adicionar os valores previstos em funcao da distancia a estradas
par(new=TRUE)
par(mar=c(5,6.5,0,0))
plot(yf$drds,yf$drds.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,lty=2,col="red", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1))
##MACHOS LANDSCAPE LEVEL | HABITAT
par(mar=c(5,2.5,0,2))
plot(ym$slp,ym$slp.fit, las=1, xlab="",ylab="",type="l",lwd=3,col="tomato4", cex=0.8, bty="n", xlim=c(0,60),ylim=c(0,1),xaxt = "n")# add graph for best fit
axis(side = 1, at = ym$slp, labels = FALSE, tck = 0)
mtext("Min",side = 1, line = 0.5, at=0, cex = 1)
mtext("Max",side = 1, line = 0.5, at=60, cex = 1)
#adicionar os valores previstos em funcao da area de povoacoes
par(new=TRUE)
par(mar=c(5,2.5,0,2),xpd=TRUE)
plot(ym$dhmn,ym$dhmn.fit, las=1, axes=FALSE, xlab="", ylab="",type="l",lwd=3,lty=2,col="#6A3D9A", cex=0.8, bty="n", xlim=c(0,2000),ylim=c(0,1))
legend("bottomright",
legend=c("Elevation","Slope", "Roads", "Settlements"),
lty = c(1,1,1,1),lwd = c(2,2,2,2),
col = c("black","tomato4","red","#6A3D9A"),
bty = "n",ncol = 1,
cex = 0.8)
library(mcmcplots)
library(R2jags)
setwd( "/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/3.analyses/1.rcode/occ/single.species/3.redfox" )
# set detection histories and covariate data
source("/Users/pedromonterroso/Documents/Trabalho/Publications/Papers/In prep/1.spatiotemporal interactions among Iberian carnivores/3.analyses/1.rcode/occ/single.species/data.R")
EH <- y$yvv[,c(5:34)]
summary(EH)
nocc <- ncol(EH)
nSites <- nrow(EH)
naive.vv <- sum(as.integer(apply(EH,1,sum, na.rm=T)>0))/nrow(EH)
# random effect
areaID <- as.numeric(siteCovs[,3])
narea <- max(areaID)
# detection covariates
trail <- detCovs$trail[,5]
ctr <- detCovs$ctr[,c(5:34)]
